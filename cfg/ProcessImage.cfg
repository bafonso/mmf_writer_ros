#! /usr/bin/env python

PACKAGE='mmf_writer'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("Recording",   bool_t,   0, "Flag ",  False)
gen.add("path",   str_t,   0, "Path to the file",  "/home/bruno/recordings/")
gen.add("filename",   str_t,   0, "file name",  "defaultMMFFilename")
gen.add("keyframe_interval", int_t, 0, "Desired key frame interval.", 180, 12, 500)
gen.add("frames_to_record", int_t, 0, "Number of frames to record.", 300, 10, 50000)
gen.add("frame_rate", int_t, 0, "Estimated frame rate, defaults to 30hz", 30, 1, 200)
gen.add("secs_to_record", double_t, 0, "Number of seconds to record, defaults 300", 300, 1, 5000)

gen.add("threshold", int_t, 0, "Fixed-level threshold for each image pixel.", 20, 0, 255)
gen.add("morph_kernel_size", int_t, 0, "Kernel size for morphological opening.", 20, 1, 100)
gen.add("center_marker_radius", int_t, 0, "Radius of center marker.", 20, 1, 100)
gen.add("drawn_line_thickness", int_t, 0, "Line thickness of drawn lines.", 10, 1, 40)
gen.add("draw_crosshairs",   bool_t,   0, "Draw crosshairs on display image.",  True)

# First string value is node name, used only for generating documentation
# Second string value ("ProcessImage") is name of class and generated
#    .h file, with "Config" added, so class ProcessImageConfig
exit(gen.generate(PACKAGE, "mmf_writer", "ProcessImage"))
